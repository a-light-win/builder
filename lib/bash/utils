#!/usr/bin/env bash

# translate the architecture name to the Go architecture name
go-arch() {
  local arch="$1"

  case "$arch" in
  x86_64) echo "amd64" ;;
  aarch64) echo "arm64" ;;
  *) echo "$arch" ;;
  esac
}

should-skip-arch() {
  local arch="$1"
  if [ -z "$PKG_ARCHS" ]; then
    return 1
  fi

  if ! grep -qw "$arch" <<<"$PKG_ARCHS"; then
    echo "Skipping arch $arch."
    return 0
  fi
  return 1
}

load-array-from-env() {
  local -n array_ref__=$1
  local env_prefix="$2"

  array_ref__=()

  local value
  while IFS= read -r value; do
    array_ref__+=("$value")
  done < <(env | sort -n | sed -n 's/^'"${env_prefix}"'[^=]\+=\(.*\)$/\1/p')
}

load-builder-env() {
  if [ -e builder-env ]; then
    set -a
    source builder-env
    set +a
  fi
}

setup-qemu-user-static() {
  which apt-get &>/dev/null
  if [ $? -eq 0 ]; then
    export DEBIAN_FRONTEND=noninteractive
    sudo apt-get install -y qemu-user-static
    sudo systemctl start systemd-binfmt
  fi
}

make-nargs() {
  local -n nargs_ref__=$1
  local option__="$2"
  local values__=("${@:3}")

  nargs_ref__=()
  local arg__
  for arg__ in "${values__[@]}"; do
    nargs_ref__+=("$option__" "$arg__")
  done
}
