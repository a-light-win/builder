set unstable := true
set dotenv-load := true

import '../../lib/lib.just'
import '../../dockerfiles/vars.just'

self := just_executable() + ' -f ' + source_file()

default_packagers := 'deb rpm archlinux'
platform := env('PKG_PLATFORM', 'linux')
arch := env('PKG_ARCH', 'amd64')
version := env('PKG_VERSION', '')
config := env('PKG_CONFIG', 'nfpm.yaml')
target := env('PKG_TARGET', 'dist')

[no-cd,script('bash')]
pack: 
  source "{{ builtin_bash_functions }}"

  if [ -z {{ version }} ]; then
    echo >&2 "version is required, please provide it with env PKG_VERSION"
    exit 1
  fi

  if [ ! -e "{{ target }}" ]; then
    mkdir -p "{{ target }}"
  fi

  export PKG_VERSION={{ version }}
  export PKG_ARCH=$(go-arch "{{ arch }}")
  export PKG_PLATFORM={{ platform }}

  pids=()
  for packager in {{ default_packagers }} ; do
    {{ self }} pack-one "$packager" "{{ config }}" "{{ target }}" &
    pids+=($!)
  done

  for pid in "${pids[@]}"; do
    wait $pid || exit $?
  done

[private, no-cd, script('bash')]
pack-one packager config target:
  source "{{ builtin_bash_functions }}"

  podman-run {{ nfpm_image_full }} \
    nfpm package --config {{ config }} --packager {{ packager }} --target {{ target }}

[no-cd, script('bash'), positional-arguments]
upload repo:
  source "{{ builtin_bash_functions }}"
  
  files=()
  nfpm-pkg-files files
  github-upload "{{ repo }}" "${files[@]}"

[no-cd, script('bash')]
clean:
  source "{{ builtin_bash_functions }}"
  nfpm-clean
